plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.mafia.statistics'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.3'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.3'
    implementation 'org.springframework.security:spring-security-oauth2-client:5.7.3'
    implementation 'org.springframework.security:spring-security-oauth2-jose:5.7.3'

    // AWS
    implementation 'com.amazonaws:aws-java-sdk:1.12.307'
    implementation 'io.awspring.cloud:spring-cloud-starter-aws-secrets-manager-config:2.4.2'

    // DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.3'

    // Postgresql
    implementation 'org.postgresql:postgresql:42.5.0'

    // Flyway
    implementation 'org.flywaydb:flyway-core:8.5.10'

    // Lombok
    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Reading from excel
    implementation 'net.sourceforge.jexcelapi:jxl:2.6.12'

    // VK
    implementation('com.vk.api:sdk:1.0.14') {
        exclude group: 'org.apache.logging.log4j'
    }

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    implementation 'org.mapstruct:mapstruct-processor:1.5.2.Final'
}

task deploy(type: Exec) {
    commandLine 'bash', 'gradle/scripts/deploy.sh'
}

test {
    useJUnitPlatform()
}
